# This file was generated by GoReleaser. DO NOT EDIT.
class Truss < Formula
  desc "Truss helps you build go-kit microservices without having to worry about writing or maintaining boilerplate code"
  homepage "https://github.com/metaverse/truss"
  version "0.2.0"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/metaverse/truss/releases/download/v0.2.0/truss_0.2.0_Darwin_x86_64.tar.gz"
    sha256 "d2060e34bf16b7808e4dbbe145ffd77486194c9527a3ac87e4fc23412a3f0537"
  elsif OS.linux?
    if Hardware::CPU.intel?
      url "https://github.com/metaverse/truss/releases/download/v0.2.0/truss_0.2.0_Linux_x86_64.tar.gz"
      sha256 "6a564a94e249506c00b84eca5a95a254dad539124fdbbbf7e2830b283ed2609f"
    end
  end
  
  depends_on "protobuf"
  depends_on "protoc-gen-gogofaster"

  def install
    bin.install "truss"
  end

  def caveats; <<~EOS
    To leverage truss's annotations you'll need to clone truss into your $(go env GOPATH)
  EOS
  end

  test do
    system "#{bin}/truss --version"
    protofile = testpath/"proto3.proto"
    protofile.write <<~EOS
      syntax = "proto3";
      package proto3;
    
      service Echo {
        rpc Echo(Request) returns (Request) { }
      }
      message Request {
        string text = 1;
      }
    EOS
    system "#{bin}/truss", "proto3.proto"
    assert_predicate testpath/"proto3.pb.go", :exist?
    assert_predicate testpath/echo-service, :exist?
    refute_predicate (testpath/"proto3.pb.go").size, :zero?
  end
end
